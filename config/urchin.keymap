
  /*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  */

  #include <behaviors.dtsi>
  #include <dt-bindings/zmk/keys.h>
  #include <dt-bindings/zmk/bt.h>
  #include <dt-bindings/zmk/ext_power.h>

  / {
    keymap {
      compatible = "zmk,keymap";
  		layer0 {
          bindings = <
          &kp Q &kp W &kp F &kp P &kp G &kp J &kp L &kp U &kp Y &kp SEMICOLON &mt LEFT_CONTROL A &lt 5 R &lt 1 S &lt 3 T &kp D &kp H &lt 4 N &lt 2 E &lt 6 I &mt LEFT_CONTROL O &mt LEFT_SHIFT Z &mt LEFT_CONTROL X &mt LEFT_ALT C &kp V &kp B &kp K &kp M &mt LEFT_ALT COMMA &mt LEFT_CONTROL DOT &mt LEFT_SHIFT SLASH &lt 8 ESCAPE &lt 2 BACKSPACE &lt 7 SPACE &mt LEFT_GUI TAB
          >;
        };layer1 {
          	bindings = <
          	&trans &trans &trans &kp C_STOP &kp C_VOLUME_UP &trans KC_BTN1 KC_WH_U KC_BTN2 &trans &trans KC_BTN2 &kp F20 KC_BTN1 &kp C_VOLUME_DOWN &trans KC_MS_L KC_MS_D KC_MS_U KC_MS_R &trans &trans &trans &trans &kp C_MUTE &trans KC_WH_L KC_WH_D KC_WH_R &trans &trans &trans &trans &trans
          	>;
        };layer2 {
          	bindings = <
          	&trans &trans &kp PAGE_UP &trans &trans &trans &trans &trans &trans &trans &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans &kp LEFT_GUI &kp F20 &kp LC(LEFT_ALT) LCA(KC_LSFT) &trans &kp HOME &kp PAGE_DOWN &kp END &trans &trans &trans &trans &trans &trans &trans &trans &kp ENTER &trans
          	>;
        };layer3 {
          	bindings = <
          	&trans &trans &trans &trans &trans &trans KC_UNDS KC_PIPE &kp SINGLE_QUOTE &trans KC_CIRC KC_ASTR KC_AMPR &kp F20 &trans KC_HASH &kp MINUS &kp SLASH KC_DQUO KC_DLR &trans &trans &trans &trans &trans &trans KC_TILD &kp BACKSLASH &kp GRAVE &trans KC_QUES &trans &trans KC_AT
          	>;
        };layer4 {
          	bindings = <
          	&trans KC_COLN KC_LT KC_GT &kp SEMICOLON &trans &trans &trans &trans &trans KC_LCBR KC_RCBR KC_LPRN KC_RPRN KC_AT &trans &kp F20 &kp EQUAL KC_PLUS KC_PERC &trans KC_EXLM &kp LEFT_BRACKET &kp RIGHT_BRACKET &trans &trans &trans &trans &trans &trans &kp C_VOLUME_DOWN &trans &trans &kp C_VOLUME_UP
          	>;
        };layer5 {
          	bindings = <
          	&trans &trans &trans &kp C_PLAY_PAUSE &kp C_VOLUME_UP &trans &kp F7 &kp F8 &kp F9 &kp F10 &trans &kp F20 &kp LC(LEFT_ALT) &kp C_FAST_FORWARD &kp C_VOLUME_DOWN &trans &kp F4 &kp F5 &kp F6 &kp F11 &trans &trans &trans &kp C_REWIND &kp C_MUTE &trans &kp F1 &kp F2 &kp F3 &kp F12 &trans &trans &trans &trans
          	>;
        };layer6 {
          	bindings = <
          	&kp KP_SLASH &kp N7 &kp N8 &kp N9 &kp KP_PLUS &kp C_VOLUME_UP &kp C_PLAY_PAUSE &trans &trans &trans &kp N0 &kp N1 &kp N2 &kp N3 &kp KP_MINUS &kp C_VOLUME_DOWN &kp C_FAST_FORWARD &kp F20 &kp F20 &trans &kp KP_ASTERISK &kp N4 &kp N5 &kp N6 &kp KP_EQUAL &kp C_MUTE &kp C_REWIND &trans &trans &trans &kp KP_DOT &trans &trans &trans
          	>;
        };layer7 {
          	bindings = <
          	&trans &trans KC_COLN &kp ESCAPE &trans &trans &trans &trans &trans &kp DELETE &kp F20 KC_PERC &kp SLASH &kp ENTER &trans DF(1) &kp LEFT_GUI &trans &trans &trans &trans &trans &trans KC_EXLM &trans DF(0) &trans RALT_T(KC_COMM) RCTL_T(KC_DOT) QK_BOOT &kp LEFT_CONTROL &kp TAB &kp F20 &trans
          	>;
        };layer8 {
          	bindings = <
          	&kp F20 &kp LEFT_GUI &kp F20 &kp F20 &kp F20 OSM(MOD_MEH) OSM(MOD_HYPR) OSM(MOD_LCTL|MOD_LSFT) OSM(MOD_LCTL|MOD_LALT) OSM(MOD_LALT|MOD_LGUI) &kp PRINTSCREEN &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 OSM(MOD_LSFT|MOD_LGUI) &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp DELETE
          	>;
        };
    };
  };
  