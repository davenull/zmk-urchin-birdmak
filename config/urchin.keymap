
  /*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  */
  // Layer definitions
#define layer0 0
#define layer1 1
#define layer2 2
#define layer3 3
#define layer4 4
#define layer5 5
#define layer7 7
#define layer8 8

  #include <behaviors.dtsi>
  #include <dt-bindings/zmk/keys.h>
  #include <dt-bindings/zmk/bt.h>
  #include <dt-bindings/zmk/outputs.h>
  #include "keymap_italian.h"
/ {
    keymap {
      	compatible = "zmk,keymap";
		layer0 {
			label = "Base";
			bindings = <
			&kp Q &kp W &kp F &kp P &kp G &kp J &kp L &kp U &kp Y &kp SEMICOLON &mt LEFT_CONTROL A &lt 5 R &lt 1 S &lt 3 T &kp D &kp H &lt 4 N &lt 2 E &lt 6 I &mt LEFT_CONTROL O &mt LEFT_SHIFT Z &mt LEFT_CONTROL X &mt LEFT_ALT C &kp V &kp B &kp K &kp M &mt LEFT_ALT COMMA &mt LEFT_CONTROL DOT &mt LEFT_SHIFT SLASH &lt 8 ESCAPE &lt 2 BACKSPACE &lt 7 SPACE &mt LEFT_GUI TAB
			>;
		};

		layer1 {
			label = "mouse";
			bindings = <
			&none &none &none &kp C_STOP &kp C_VOLUME_UP &none &none &none &none &none &none &none &kp F20 &none &kp C_VOLUME_DOWN &none &none &none &none &none &none &none &none &none &kp C_MUTE &none &none &none &noneR &none &none &none &none &none
			>;
		};

		layer2 {
			label = "move";
			bindings = <
			&none &none &kp PAGE_UP &none &none &none &none &none &none &none &kp LEFT &kp DOWN &kp UP &kp RIGHT &none &none &kp LEFT_GUI &kp F20 &kp LC(LEFT_ALT) LCA(KC_LSFT) &none &kp HOME &kp PAGE_DOWN &kp END &none &none &none &none &none &none &none &none &kp ENTER &none
			>;
		};

		layer3 {
			label = "sym1";
			bindings = <
			&none &none &none &none &none &none KC_UNDS KC_PIPE &kp SINGLE_QUOTE &none KC_CIRC KC_ASTR KC_AMPR &kp F20 &none KC_HASH &kp MINUS &kp SLASH KC_DQUO KC_DLR &none &none &none &none &none &none KC_TILD &kp BACKSLASH &kp GRAVE &none KC_QUES &none &none KC_AT
			>;
		};

		layer4 {
			label = "sym2";
			bindings = <
			&none KC_COLN KC_LT KC_GT &kp SEMICOLON &none &none &none &none &none KC_LCBR KC_RCBR KC_LPRN KC_RPRN KC_AT &none &kp F20 &kp EQUAL KC_PLUS KC_PERC &none KC_EXLM &kp LEFT_BRACKET &kp RIGHT_BRACKET &none &none &none &none &none &none &kp C_VOLUME_DOWN &none &none &kp C_VOLUME_UP
			>;
		};
		layer5 {
			label = "func";
			bindings = <
			&none &none &none &kp C_PLAY_PAUSE &kp C_VOLUME_UP &none &kp F7 &kp F8 &kp F9 &kp F10 &none &kp F20 &kp LC(LEFT_ALT) &kp C_FAST_FORWARD &kp C_VOLUME_DOWN &none &kp F4 &kp F5 &kp F6 &kp F11 &none &none &none &kp C_REWIND &kp C_MUTE &none &kp F1 &kp F2 &kp F3 &kp F12 &none &none &none &none
			>;
		};
		layer6 {
			label = "sym3";
			bindings = <
			&kp KP_SLASH &kp N7 &kp N8 &kp N9 &kp KP_PLUS &kp C_VOLUME_UP &kp C_PLAY_PAUSE &none &none &none &kp N0 &kp N1 &kp N2 &kp N3 &kp KP_MINUS &kp C_VOLUME_DOWN &kp C_FAST_FORWARD &kp F20 &kp F20 &none &kp KP_ASTERISK &kp N4 &kp N5 &kp N6 &kp KP_EQUAL &kp C_MUTE &kp C_REWIND &none &none &none &kp KP_DOT &none &none &none
			>;
		};
		layer7 {
			label = "alt";
			bindings = <
			&none &none KC_COLN &kp ESCAPE &none &none &none &none &none &kp DELETE &kp F20 KC_PERC &kp SLASH &kp ENTER &none DF(1) &kp LEFT_GUI &none &none &none &none &none &none KC_EXLM &none DF(0) &none RALT_T(KC_COMM) RCTL_T(KC_DOT) QK_BOOT &kp LEFT_CONTROL &kp TAB &kp F20 &none
			>;
		};
		layer8 {
			bindings = <
			&kp F20 &kp LEFT_GUI &kp F20 &kp F20 &kp F20 OSM(MOD_MEH) OSM(MOD_HYPR) OSM(MOD_LCTL|MOD_LSFT) OSM(MOD_LCTL|MOD_LALT) OSM(MOD_LALT|MOD_LGUI) &kp PRINTSCREEN &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 OSM(MOD_LSFT|MOD_LGUI) &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp DELETE
			>;
		};
	};
};
  